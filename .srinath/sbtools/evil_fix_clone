#!/usr/bin/env bash

cd `sbroot`
if [ ! -f battree ]; then
    echo "This is not a sandbox"
    exit 1
fi

current=$(basename $PWD)
if [ $PWD != "/local-ssd/$USER/$current" ]; then
    echo "Can only reliably fix clones placed under /local-ssd/$USER"
    exit 1
fi

echo "Fixing .sbtools/.source-path-gdbinit"
sb -update-gdb-source-path

if [ -f .perforce ]; then
    echo "Fixing perforce client"

    clientName=`cat .perforce | grep P4CLIENT | sed 's/P4CLIENT=//'`
    newClientName=$USER.$current.local.$HOSTNAME

    cat .sbtools/p4syncinfo/sb_client_spec.out \
        | sed "s/$clientName/$newClientName/" \
        | sed "s!Root:.*!Root:\t$PWD!" \
        | p4 client -i

    echo "P4CLIENT=$newClientName" > .perforce

    echo "Flushing to last perforce change"
    lastChange=`cat .sbtools/p4syncinfo/change_level`
    p4 sync -k -q //...#0
    p4 sync -k -q //...@$lastChange
    p4 -x .sbtools/p4syncinfo/sb_inconsistent_list.txt sync -k -q
    p4 -x .sbtools/p4syncinfo/sb_sync0_list.txt sync -k -q
fi
