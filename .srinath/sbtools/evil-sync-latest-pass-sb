#!/bin/bash

if [ $SILENT ]; then
    STDOUT=/tmp/evil_sync_latest_pass_out_log.$USER.$$
    BS="-no-backspace"
else
    STDOUT=/dev/stdout
    BS=""
fi

if [ "$P4CONFIG" == "" ]; then
    # sbsync fails if P4CONFIG is not set.
    export P4CONFIG=.perforce
fi

function print_logs
{
    echo $1
    if [ $SILENT ]; then
        echo "Printing logs below:"
        cat $STDOUT
    fi
}

function sync_latest_sb
{
    cluster=$1

    if [ $cluster == "" ]; then
        echo "Set cluster to a valid cluster name (for example Asfstage). Best is to do this in your .cshrc.mine or .bashrc"
        return 1
    fi

    latestPass=`readlink /mathworks/devel/jobarchive/$cluster/latest_pass`

    lastJobSynced=`mw -using Bstateflow sbs list | grep $latestPass`
    if [ "$lastJobSynced" != "" ]; then
        echo "Already synced the latest version of ${cluster} at ${lastJobSynced}"
        return 0;
    fi

    mw -using Bstateflow sbs create -c $cluster -n ${cluster}_${latestPass}
    lastJobSynced=`mw -using Bstateflow sbs list | grep $latestPass`
    if [ "$lastJobSynced" == "" ]; then
        print_logs "Something went horribly wrong. Expecting a network sandbox called ${cluster}_${latestPass}"
        return 1;
    fi

    cd ${lastJobSynced}

    prepsb >>$STDOUT 2>&1
    if [ $? -ne 0 ]; then
        print_logs "Error running prepsb in `pwd`! Sandbox is sync'ed but not ready to use!"
        return 1;
    fi

    mw -using Bstateflow sbs snapshot create ready

    echo "Created new latest_pass from $cluster:$latestPass"
    return 0;
}

sbsyscheck >> $STDOUT 2>&1
if [ $? -ne 0 ]; then
    print_logs "sbsyscheck reports problems with the machine. See below"
    exit 1
fi

for cluster in $ZFS_MASTER_SB
do
    echo "==========================================================================="
    echo "Syncing latest $cluster"
    echo "Starting sync of $cluster" > $STDOUT
    sync_latest_sb $cluster
    echo "==========================================================================="
done
