#!/bin/dash

# $ROOT                 <ROOT>/
#                       │
# $CLUSTER_ROOT         ├── .cluster/
# $CLUSTER_PATH         │   └── <CLUSTER>/
# $CLUSTER_GIT_REPO     │       ├── git/
#                       │       ├── ...
# $CLUSTER_LATEST_PASS  │       └── <CLUSTER>.latest_pass/
#                       │
# $SANDBOX_ROOT         └── .sandbox/
# $SANDBOX_MAETADATA        └── <SANDBOX>/
# $SANDBOX_GIT_REPO             ├── git/
# $SANDBOX_PATHCES              ├── pathces/
# $SANDBOX_CLUSTER              ├── $SANDBOX_VAR_CLUSTER -> $CLUSTER_ROOT/$CLUSTER_NAME
#                               └── ...

# On entry wd is $CLUSTER_LATEST_PASS

truncate_if_possible() {
    ROOT=$( dirname $CLUSTER_ROOT )
    SANDBOX_ROOT=$ROOT/.sandbox

    KEEP=0
    for SANDBOX_NAME in $SANDBOX_ROOT ; do
        SANDBOX_MAETADATA=$SANDBOX_ROOT/$SANDBOX_NAME
        SANDBOX_GIT_REPO=$SANDBOX_MAETADATA/git

        if [ $( readlink $SANDBOX_MAETADATA/$SANDBOX_VAR_CLUSTER ) = $CLUSTER_PATH ]; then
            BASE_HASH="$( git -C $SANDBOX_GIT_REPO rev-parse SANDBOX_BASE )"
            if [ ! -z "$BASE_HASH" ]; then
                DEPTH=$( git rev-list --count $BASE_HASH..master -- )
                KEEP= $((DEPTH>KEEP ? DEPTH : KEEP))
            fi
        fi
    done

    if [ $KEEP != $( git log --oneline | wc -l ) ]; then
        CLUSTER_GIT_HIDE=$CLUSTER_GIT_REPO.hide
        TMP_CLONE=/tmp/tmp_git_clone.$$

        mv $CLUSTER_GIT_REPO $CLUSTER_GIT_HIDE
        git clone --quiet --separate-git-dir=$CLUSTER_GIT_REPO --depth=X file://$CLUSTER_GIT_HIDE $TMP_CLONE
        cp $CLUSTER_GIT_HIDE/config $CLUSTER_GIT_REPO/config
        cp $CLUSTER_GIT_HIDE/info/exclude $CLUSTER_GIT_REPO/info/exclude
        rm -rf $TMP_CLONE
    fi
}


# Duplicate the top-level .gitignore into its canonical location
cp .gitignore $CLUSTER_GIT_REPO/info/exclude

# If our massaged cluster image differs from repository tip then add and commit
if ! git diff-index --quiet HEAD -- ; then
    # Since we are going to repack see if we can drop some useless history
    # truncate_if_possible

    # Adding and committing files goes _much_ faster with no compression
    git config --local core.compression 0
    git add --chmod=-x .gitignore config matlab >/dev/null 2>&1
    sbver -s $CLUSTER_LATEST_PASS \
    | sed -nre '/SyncFrom/ s|^.*/(B[^/]*)/(....)_(..)_(..)_h(..)m(..)s(..)_job([0-9]*).*$|\2-\3-\4 \5:\6:\7 j\8 \1|gp' \
    | git commit -aF - >/dev/null 2>&1

    [ -h $CLUSTER_PATH/git_uncompressed ] || \
        ln -Tfs $( du -sh $CLUSTER_GIT_REPO | sed -nre 's| *([0-9A-Z]*).*$|\1|p' ) $CLUSTER_PATH/git_uncompressed

    # Save uncompressed size

    # Now repack with truly extreme compression
    git config --local core.compression 9
    time -p git repack -AbdfF --unpack-unreachable=now --threads=0 --depth=50 --window=4095 --window-memory=0

    FROM="$( git log -1 --pretty='%s' )"

    # Leave behind syned job and final size of the git repository
    cd $CLUSTER_PATH
    ln -Tfs "$( echo $FROM       | sed -nre 's|([^ ]* [^ ]*) .*$|\1|gp'       )" dtm
    ln -Tfs  $( echo $FROM       | sed -nre 's|[^ ]* [^ ]* ([^ ]*) .*$|\1|gp' )  job
    ln -Tfs  $( git -C $CLUSTER_GIT_REPO log --oneline | wc -l                )  git_commits
    ln -Tfs  $( du -sh $CLUSTER_GIT_REPO | sed -nre 's| *([0-9A-Z]*).*$|\1|p' )  git_size
fi
