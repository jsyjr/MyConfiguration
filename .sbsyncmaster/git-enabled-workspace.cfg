########################################################################
#
# Perform the fundamental "sync" to copy sources and compiled binaries
# (cfg files: http://www-sbtools-ah/hub/share/sbtools/etc/sbsync/cfg/)
#
########################################################################
-P glnxa64
# -exclude mattab/examples
# -exclude mattab/help
# -exclude mattab/shared/sim3d
# -exclude mattab/shared/sim3dprojects
 -cfg cgir_syncmaster


########################################################################
#
# Clean out obvious trash
#
########################################################################

-run-after-sync "rm -rf .sbtools/global GPATH GRTAGS GTAGS ID"


########################################################################
#
# Build various (large) index structures.
#
########################################################################

# Generate the per component lists of files maintained in a parallel
# directory tree beneath matlab/.sbtools/global but drop the nearly
# useless list of derived files
-run-after-sync "time -p sblocate -gendb"
-run-after-sync "rm -rf .sbtools/global/matlab/derived"

# Ensure connection to localhub (must run after sblocate)
-run-after-sync "sblocalhub -sync"

# Use the remaining database of sblocated file to generate the tags database
-run-after-sync "time -p sbglobal -num-threads 12 -gentags matlab/src matlab/toolbox matlab/test"

# Use my newer versions of GNU global and gtags if available
-run-after-sync "if [ -e ${HOME}/bin/mathworks-global ] ; then PATH=/usr/local/bin:${PATH} time -p ${HOME}/bin/mathworks-global matlab/src matlab/toolbox matlab/test ; fi"

# Regenerate matlab/toolbox/local/toolbox_cache-ARCH.xml
-run-after-sync "time -p sbgentbxcache"

# Use src/cg_ir/ez.mk to derive a list of modules to index via sbcpptags
# -run-after-sync "cat matlab/src/cg_ir/ez.mk | sed -nre '/\$\(MAKE\) -s -C / s|^.* -s -C ../([^ ]*) .*$|matlab/src/\1|p' | sort >matlab/sbcpptags.cfg"
# -run-after-sync "time -p sbcpptags -mods matlab/sbcpptags.cfg"

# Build emacs' WorkSpace Files index (for my wsf.el package)
-run-after-sync "time -p /usr/bin/emacs --batch --load ${HOME}/.emacs --eval='(load-library \"wsf\")' -f wsf--current-completions -f save-buffers-kill-emacs"


########################################################################
#
# Delete nearly useless debug symbols that only slow us down
# (Client needs -no-debug-backing-stores in $(HOME)/.sbtools/sb.cfg)
#
########################################################################

# Protect libraries needed so breaksegv works
-run-after-sync "mkdir -p matlab/bin/glnxa64/SAVE"
-run-after-sync "ls -l matlab/bin/glnxa64/libmwcg* >matlab/bin/glnxa64/SAVE/before.dir"
-run-after-sync "if [ -f matlab/bin/glnxa64/libmwmcr.so.dbg ]; then mv matlab/bin/glnxa64/libmwmcr.so.dbg matlab/bin/glnxa64/SAVE/libmwmcr.so.dbg ;fi"
-run-after-sync "if [ -f matlab/bin/glnxa64/libmwfl.so.dbg  ]; then mv matlab/bin/glnxa64/libmwfl.so.dbg  matlab/bin/glnxa64/SAVE/libmwfl.so.dbg  ;fi"
# Delete all remaining .dbg files
-run-after-sync "time -p find matlab/bin/glnxa64 -name \"*.dbg\" -exec rm {} \;"
# Restore libraries needed so breaksegv works
-run-after-sync "if [ -f matlab/bin/glnxa64/SAVE/libmwmcr.so.dbg ]; then mv matlab/bin/glnxa64/SAVE/libmwmcr.so.dbg matlab/bin/glnxa64/libmwmcr.so.dbg ;fi"
-run-after-sync "if [ -f matlab/bin/glnxa64/SAVE/libmwfl.so.dbg  ]; then mv matlab/bin/glnxa64/SAVE/libmwfl.so.dbg  matlab/bin/glnxa64/libmwfl.so.dbg  ;fi"
# -run-after-sync "rm -r matlab/bin/glnxa64/SAVE"


########################################################################
#
# Run sbsmartbuild's prebuild to create the proper header environment
#
########################################################################

-run-after-sync "echo 'matlab/src/cg_ir/export/include/cg_ir/fwd/common.hpp' > force.txt"
-run-after-sync "time -p sbsmartbuild -F force.txt DEBUG=1 NORUNTESTS=1 DISABLE_WARNINGS_AS_ERROR=1 prebuild"


########################################################################
#
# Rebuild in full debug-mode the modules we care about (those in ez.mk)
#
########################################################################

# Build the ez.mk modules with debugging symbols
-run-after-sync "cd matlab/src/cg_ir ; time -p ${MAKE_SCRIPT} -no-sbsyscheck -distcc -f ${SYNCMASTERDIR}/ez.mk build_debug_only"
-run-after-sync "ls -l matlab/bin/glnxa64/libmwcg* >matlab/bin/glnxa64/SAVE/after.dir"


########################################################################
#
# Generate up-to-date Doxygen documentation
#
########################################################################

-run-after-sync "mkdir -p matlab/derived/doxygen/tags/developer_view matlab/derived/doxygen/tags/user_view matlab/derived/doxygen/tags/test_view"
-run-after-sync                                             "cd matlab/src/cg_ir            ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_core"
-run-after-sync "if [ -d matlab/src/cgir_cgel       ]; then  cd matlab/src/cgir_cgel        ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_cgel        ; fi"
-run-after-sync "if [ -d matlab/src/cgir_clair      ]; then  cd matlab/src/cgir_clair       ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_clair       ; fi"
-run-after-sync "if [ -d matlab/src/cgir_cpp_emitter]; then  cd matlab/src/cgir_cpp_emitter ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_cpp_emitter ; fi"
-run-after-sync "if [ -d matlab/src/cgir_interp     ]; then  cd matlab/src/cgir_interp      ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_interp      ; fi"
-run-after-sync "if [ -d matlab/src/cgir_polly      ]; then  cd matlab/src/cgir_polly       ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_polly       ; fi"
-run-after-sync "if [ -d matlab/src/cgir_spike      ]; then  cd matlab/src/cgir_spike       ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_spike       ; fi"
-run-after-sync "if [ -d matlab/src/cgir_support    ]; then  cd matlab/src/cgir_support     ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_support     ; fi"
-run-after-sync "if [ -d matlab/src/cgir_tests      ]; then  cd matlab/src/cgir_tests       ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_tests       ; fi"
-run-after-sync "if [ -d matlab/src/cgir_vm_rt      ]; then  cd matlab/src/cgir_vm_rt       ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_vm_rt       ; fi"
-run-after-sync "if [ -d matlab/src/cgir_xform      ]; then  cd matlab/src/cgir_xform       ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=cgir_xform       ; fi"
-run-after-sync "if [ -d matlab/src/range_services  ]; then  cd matlab/src/range_services   ; time -p mw gmake doxygen COMPONENTS_TO_BUIlD=range_services   ; fi"
# -run-after-sync "cd matlab ; rm -rf derived/doxygen/src_*_only/ derived/doxygen/tmp"


########################################################################
#
# git-enable this cluster image
#
########################################################################

-run-after-sync "$SYNCMASTERDIR/git-it $GITDIR $GIT_USER_NAME $GIT_USER_EMAIL"
